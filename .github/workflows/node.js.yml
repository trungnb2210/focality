# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node

name: Node.js CI

on:
  push: {}
  pull_request: {}

env:
  POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
  POSTGRES_PRISMA_URL: ${{ secrets.POSTGRES_PRISMA_URL }}
  POSTGRES_URL_NON_POOLING: ${{ secrets.POSTGRES_URL_NON_POOLING }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
  POSTGRES_URL_NO_SSL: ${{ secrets.POSTGRES_URL_NO_SSL }}
  BLOB_READ_WRITE_TOKEN: ${{ secrets.BLOB_READ_WRITE_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: env
    - run: npm run build --if-present

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # Node versions to run tests across

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm test

